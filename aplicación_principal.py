# -*- coding: utf-8 -*-
"""Aplicación Principal

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14QFgANX-7KqBaVdveucppPJNPam2x4ua
"""

import streamlit as st
import config
from datetime import datetime
import plotly.graph_objects as go

# --- CONFIGURACIÓN DE LA PÁGINA ---
st.set_page_config(
    page_title="Base de Datos Viajes Isatour",
    page_icon="https://i.ibb.co/9v0Zz7N/ISATOUR-400-x-400-px-1.png",
    layout="wide",
)

# --- INICIALIZACIÓN Y AUTENTICACIÓN ---
try:
    db = config.init_firebase()
except Exception as e:
    st.error(f"Error al inicializar Firebase. Revisa que tus 'secrets' estén bien configurados en Streamlit. Error: {e}")
    st.stop()

# --- ESTADO DE LA SESIÓN ---
if 'authenticated' not in st.session_state:
    st.session_state.authenticated = False
if 'active_excursion_id' not in st.session_state:
    st.session_state.active_excursion_id = None
if 'excursiones_cache' not in st.session_state:
    st.session_state.excursiones_cache = []

# --- FUNCIONES AUXILIARES ---
def format_currency(value):
    return f"${value:,.0f}"

# --- VISTA DE LOGIN ---
if not st.session_state.authenticated:
    st.image("https://i.ibb.co/9v0Zz7N/ISATOUR-400-x-400-px-1.png", width=100)
    st.title("Bienvenido a Isatour")
    st.write("Ingresa las credenciales para acceder.")

    user = st.text_input("Usuario")
    password = st.text_input("Contraseña", type="password")

    app_user = st.secrets.get("APP_USER", "isatour")
    app_password = st.secrets.get("APP_PASSWORD", "isatour1979*")

    if st.button("Iniciar Sesión"):
        if user.lower() == app_user and password == app_password:
            st.session_state.authenticated = True
            st.rerun()
        else:
            st.error("Usuario o contraseña incorrectos.")
    st.stop()

# --- VISTA PRINCIPAL DE LA APP ---
st.sidebar.image("https://i.ibb.co/9v0Zz7N/ISATOUR-400-x-400-px-1.png", width=70)
st.sidebar.title("Viajes Isatour")
selected_tab = st.sidebar.radio("Navegación", ["Gestionar Excursiones", "Clientes y Abonos", "Costos y Proveedores", "Análisis Financiero"])

# --- LÓGICA DE DATOS ---
try:
    excursiones_ref = db.collection("excursiones")
    excursiones_docs = excursiones_ref.order_by("createdAt", direction="DESCENDING").stream()
    st.session_state.excursiones_cache = [{"id": doc.id, **doc.to_dict()} for doc in excursiones_docs]
except Exception as e:
    st.error(f"No se pudieron cargar las excursiones. ¿Es posible que aún no hayas creado la colección 'excursiones' en Firestore? Error: {e}")
    st.session_state.excursiones_cache = []


# --- PESTAÑA: GESTIONAR EXCURSIONES ---
if selected_tab == "Gestionar Excursiones":
    st.header("Gestionar Excursiones")

    col1, col2 = st.columns([1, 2])

    with col1:
        with st.container(border=True):
            st.subheader("Nueva Excursión")
            with st.form("add_excursion_form", clear_on_submit=True):
                name = st.text_input("Nombre del Viaje", placeholder="Ej: Viaje a Guatapé")
                description = st.text_area("Descripción / Itinerario", height=200)
                cost = st.number_input("Valor por Persona", min_value=0, step=1000)

                submitted = st.form_submit_button("Crear Excursión", use_container_width=True, type="primary")
                if submitted and name and cost > 0:
                    excursiones_ref.add({
                        "name": name,
                        "description": description,
                        "costPerPerson": cost,
                        "createdAt": datetime.now()
                    })
                    st.success(f"¡Excursión '{name}' creada!")
                    st.rerun()

    with col2:
        st.subheader("Excursiones Activas")
        if not st.session_state.excursiones_cache:
            st.info("No hay excursiones creadas. ¡Añade una para empezar!")

        for ex in st.session_state.excursiones_cache:
            with st.expander(f"{ex['name']} - {format_currency(ex.get('costPerPerson', 0))}"):
                st.write(ex.get('description', 'Sin descripción.'))

                if st.button("Eliminar Excursión", key=f"delete_{ex['id']}", use_container_width=True, type="secondary"):
                    excursiones_ref